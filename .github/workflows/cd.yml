name: Deploy Strapi on ECS (Blue/Green)

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: rohana-strapi-repo
  ECS_CLUSTER_NAME: rohana-strapi-cluster
  ECS_SERVICE_NAME: rohana-strapi-service
  CONTAINER_NAME: rohana-strapi
  CODEDEPLOY_APP_NAME: rohana-strapi-codedeploy-app
  CODEDEPLOY_GROUP_NAME: rohana-strapi-deployment-group

jobs:
  deploy:
    name: Deploy Strapi to ECS using CodeDeploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Trigger CodeDeploy Deployment
        if: ${{ github.event.inputs.action == 'apply' }}
        shell: bash
        run: |
          TASK_DEF_ARN=$(aws ecs list-task-definitions \
            --family-prefix rohana-strapi-task \
            --sort DESC \
            --max-items 1 \
            --query 'taskDefinitionArns[0]' \
            --output text)

          echo "Using TASK_DEF_ARN: $TASK_DEF_ARN"

          echo '{
            "version": 1,
            "Resources": [
              {
                "TargetService": {
                  "Type": "AWS::ECS::Service",
                  "Properties": {
                    "TaskDefinition": "'"$TASK_DEF_ARN"'",
                    "LoadBalancerInfo": {
                      "ContainerName": "'"${CONTAINER_NAME}"'",
                      "ContainerPort": 1337
                    }
                  }
                }
              }
            ]
          }' > appspec.json

          DEPLOYMENT_JSON=$(jq -Rs . < appspec.json)

          aws deploy create-deployment \
            --application-name "$CODEDEPLOY_APP_NAME" \
            --deployment-group-name "$CODEDEPLOY_GROUP_NAME" \
            --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
            --revision "revisionType=AppSpecContent,appSpecContent={\"content\":$DEPLOYMENT_JSON}" \
            --description "Blue/Green deployment triggered by GitHub Actions"


name: Strapi CD - Blue/Green Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'

jobs:
  deploy:
    name: Trigger CodeDeploy Deployment
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      ECS_CLUSTER_NAME: rohana-strapi-cluster
      ECS_SERVICE_NAME: rohana-strapi-service
      CONTAINER_NAME: rohana-strapi
      CONTAINER_PORT: 1337
      CODEDEPLOY_APP_NAME: rohana-strapi
      CODEDEPLOY_GROUP_NAME: rohana-strapi-dg

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Latest Task Definition ARN
        id: taskdef
        run: |
          TASK_DEF_ARN=$(aws ecs list-task-definitions \
            --family-prefix $ECS_SERVICE_NAME \
            --sort DESC \
            --status ACTIVE \
            --region $AWS_REGION \
            --query 'taskDefinitionArns[0]' \
            --output text)
          echo "Latest Task Definition ARN: $TASK_DEF_ARN"
          echo "task_def_arn=$TASK_DEF_ARN" >> $GITHUB_OUTPUT

      - name: Trigger CodeDeploy Deployment
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          TASK_DEF_ARN=${{ steps.taskdef.outputs.task_def_arn }}

          DEPLOYMENT_JSON=$(jq -n \
            --arg taskDef "$TASK_DEF_ARN" \
            --arg cname "$CONTAINER_NAME" \
            --arg cport "$CONTAINER_PORT" '{
            revisionType: "AppSpecContent",
            appSpecContent: {
              content: "version: 1\nResources:\n  - TargetService:\n      Type: AWS::ECS::Service\n      Properties:\n        TaskDefinition: \($taskDef)\n        LoadBalancerInfo:\n          ContainerName: \($cname)\n          ContainerPort: \($cport | tonumber)"
            }
          }')

          echo "Using Task Definition: $TASK_DEF_ARN"
          echo "Generated Revision JSON:"
          echo "$DEPLOYMENT_JSON"

          aws deploy create-deployment \
            --application-name "$CODEDEPLOY_APP_NAME" \
            --deployment-group-name "$CODEDEPLOY_GROUP_NAME" \
            --deployment-config-name "CodeDeployDefault.ECSCanary10Percent5Minutes" \
            --region "$AWS_REGION" \
            --revision "$DEPLOYMENT_JSON"

